{"version":3,"sources":["components/Filter.js","components/AddPerson.js","components/Contacts.js","services/persons.js","components/notification.js","App.js","index.js"],"names":["Filter","onFilterChange","onChange","AddPerson","props","onSubmit","addNumber","onNameChange","onNumberChange","type","Contacts","persons","deleteHandler","map","person","name","number","personid","id","onClick","baseUrl","personsService","getAll","axios","get","then","response","data","create","newObject","post","update","put","deletePerson","delete","Notification","message","messageStyle","style","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","showFiltered","setShowFiltered","newFilter","setNewFilter","errorMessage","setErrorMessage","setMessageStyle","useEffect","serverPersons","filteredPhones","filter","toLowerCase","startsWith","messageSuccessStyle","color","fontStyle","fontSize","padding","messageFailStyle","event","target","value","length","preventDefault","newPerson","some","element","window","confirm","updateId","find","serverPerson","catch","error","setTimeout","newDbPerson","concat","console","log","personId","attributes","getNamedItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f2d1fa3.chunk.js","sourcesContent":["function Filter({ onFilterChange }) {\r\n  return (\r\n    <div>\r\n      search names: <input onChange={onFilterChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","function AddPerson(props) {\r\n  return (\r\n    <div>\r\n      <h2>Add new contact</h2>\r\n      <form onSubmit={props.addNumber}>\r\n        <div>\r\n          name: <input onChange={props.onNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input onChange={props.onNumberChange} />\r\n        </div>\r\n        <button type=\"submit\">add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddPerson;\r\n","const Contacts = ({ persons, deleteHandler }) => {\r\n  return (\r\n    <div>\r\n      {persons.map((person) => (\r\n        <div key={person.name}>\r\n          <p>\r\n            {person.name} {person.number}\r\n          </p>\r\n          <button personid={person.id} onClick={deleteHandler}>Delete</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst personsService = {\r\n  getAll,\r\n  create,\r\n  update,\r\n  deletePerson,\r\n};\r\n\r\nexport default personsService;\r\n","const Notification = ({ message, messageStyle }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div style={messageStyle}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Filter from \"./components/Filter\";\r\nimport AddPerson from \"./components/AddPerson\";\r\nimport Contacts from \"./components/Contacts\";\r\nimport personsService from \"./services/persons\";\r\nimport Notification from \"./components/notification\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [showFiltered, setShowFiltered] = useState(true);\r\n  const [newFilter, setNewFilter] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [messageStyle, setMessageStyle] = useState({});\r\n\r\n  // load data from server\r\n  useEffect(() => {\r\n    personsService.getAll().then((serverPersons) => {\r\n      setPersons(serverPersons);\r\n    });\r\n  }, []);\r\n\r\n  const filteredPhones = showFiltered\r\n    ? persons\r\n    : persons.filter((person) =>\r\n        person.name.toLowerCase().startsWith(newFilter.toLowerCase())\r\n      );\r\n\r\n  const addNumber = (event) => {\r\n    event.preventDefault();\r\n\r\n    function personExists(name) {\r\n      return persons.some(function (element) {\r\n        return element.name === name;\r\n      });\r\n    }\r\n\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber,\r\n    };\r\n\r\n    if (personExists(newName)) {\r\n      if (\r\n        window.confirm(\r\n          ` ${newName} already in phonebook, replace the old number with a new one?`\r\n        )\r\n      ) {\r\n        const updateId = persons.find((person) => person.name === newName).id;\r\n        personsService\r\n          .update(updateId, newPerson)\r\n          .then((serverPerson) => {\r\n            setPersons(\r\n              persons.map((person) =>\r\n                person.id === updateId ? serverPerson : person\r\n              )\r\n            );\r\n            setMessageStyle(messageSuccessStyle);\r\n            setErrorMessage(`Replaced number for ${newName}`);\r\n          })\r\n          .catch((error) => {\r\n            setErrorMessage(`${newName} already deleted from server`);\r\n            setMessageStyle(messageFailStyle);\r\n            setTimeout(() => {\r\n              setErrorMessage(null);\r\n            }, 5000);\r\n          });\r\n      }\r\n      return <></>;\r\n    }\r\n\r\n    personsService\r\n      .create(newPerson)\r\n      .then((newDbPerson) => {\r\n        setNewName(\"\");\r\n        setNewNumber(\"\");\r\n        setPersons(persons.concat(newDbPerson));\r\n        setMessageStyle(messageSuccessStyle);\r\n        setErrorMessage(`Added ${newName}`);\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage(error.response.data.error);\r\n        setMessageStyle(messageFailStyle);\r\n        setTimeout(() => {\r\n          setErrorMessage(null);\r\n        }, 5000);\r\n      });\r\n    setNewName(\"\");\r\n    setNewNumber(\"\");\r\n    return <></>;\r\n  };\r\n\r\n  const onNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const onNumberChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const onFilterChange = (event) => {\r\n    setNewFilter(event.target.value);\r\n    if (newFilter.length !== 0) {\r\n      setShowFiltered(true);\r\n    } else {\r\n      setShowFiltered(false);\r\n    }\r\n  };\r\n\r\n  const deleteHandler = (event) => {\r\n    console.log(event);\r\n    const personId = event.target.attributes.getNamedItem(\"personid\").value;\r\n\r\n    console.log(personId);\r\n    console.log(persons);\r\n    const deletePerson = persons.find((person) => person.id === personId);\r\n    if (window.confirm(`Do you really want to delete ${deletePerson.name}?`)) {\r\n      personsService.deletePerson(personId);\r\n      setPersons(persons.filter((person) => person.id !== personId));\r\n      setMessageStyle(messageSuccessStyle);\r\n      setErrorMessage(`Removed ${deletePerson.name}`);\r\n    }\r\n  };\r\n\r\n  const messageSuccessStyle = {\r\n    color: \"green\",\r\n    fontStyle: \"italic\",\r\n    fontSize: 22,\r\n    padding: 20,\r\n  };\r\n\r\n  const messageFailStyle = {\r\n    color: \"red\",\r\n    fontStyle: \"bold\",\r\n    fontSize: 22,\r\n    padding: 20,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={errorMessage} messageStyle={messageStyle} />\r\n      <Filter onFilterChange={onFilterChange} />\r\n\r\n      <AddPerson\r\n        addNumber={addNumber}\r\n        onNameChange={onNameChange}\r\n        onNumberChange={onNumberChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Contacts persons={filteredPhones} deleteHandler={deleteHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}